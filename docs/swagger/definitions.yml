definitions:
  EthereumConfigResponse:
    type: 'object'
    required:
      - 'network'
      - 'rpcUrl'
      - 'connection'
      - 'timestamp'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      rpcUrl:
        type: 'string'
        example: 'https://mainnet.infura.io/v3/'
      connection:
        type: 'boolean'
        example: true
      timestamp:
        type: 'integer'
        example: 1636368085740

  NonceRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'

  NonceResponse:
    type: 'object'
    required:
      - 'nonce'
    properties:
      privateKey:
        type: 'integer'
        example: 123

  AllowancesRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'spender'
      - 'tokenSymbols'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      spender:
        type: 'string'
        example: 'uniswap'
      tokenSymbols:
        type: 'array'
        items: 'string'
        example: ['WETH', 'DAI']
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'

  AllowancesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'spender'
      - 'approvals'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      spender:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      approvals:
        type: 'object'
        properties:
          id:
            type: 'string'
          name:
            type: 'string'
        example: '{"WETH": "100","DAI": "300"}'

  BalancesRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'tokenSymbols'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      tokenSymbols:
        type: 'array'
        items: 'string'
        example: ['WETH', 'DAI']
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'

  BalancesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'balances'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      balances:
        type: 'object'
        properties:
          id:
            type: 'string'
          name:
            type: 'string'
        example: '{"ETH": "1.5", "WETH": "100","DAI": "300"}'

  ApproveRequest:
    type: 'object'
    required:
      - 'privateKey'
      - 'spender'
      - 'token'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'  # noqa: documentation
      spender:
        type: 'string'
        example: 'uniswap'
      token:
        type: 'string'
        example: 'WETH'
      amount:
        type: 'string'
        example: '0'
      nonce:
        type: 'number'
        example: 123
      maxFeePerGas:
        type: 'string'
        example: '5000000000'
      maxPriorityFeePerGas:
        type: 'string'
        example: '5000000000'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'

  ApproveResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'tokenAddress'
      - 'spender'
      - 'amount'
      - 'nonce'
      - 'approval'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1.526
      tokenAddress:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      spender:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      amount:
        type: 'string'
        example: '100'
      nonce:
        type: 'number'
        example: 124
      approval:
        type: 'object'
        example: '{"type": 2,"chainId": 42,"nonce": 129,"maxPriorityFeePerGas": "94000000000","maxFeePerGas": "94000000000","gasPrice": null,"gasLimit": "100000","to": "0xd0A1E359811322d97991E03f863a0C30C2cF029C","value": "0","data": "0x095ea7b30000000000000000000000007a250d5630b4cf539739df2c5dacb4c659f2488dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","accessList": [],"hash": "0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d","v": 1,"r": "0x47c517271885b7041d81bcd65cd050a5d6be3fbd67a8f1660ac8d7e68fc8221f","s": "0x7c62e114b2cb0eae6236b597fb4aacb01c51e56afd7f734e6039d83aa400ba82","from": "0xFaA12FD102FE8623C9299c72B03E45107F2772B5","confirmations": 0}'  # noqa: documentation

  PollRequest:
    type: 'object'
    required:
      - 'txHash'
      - 'chain'
      - 'network'
    properties:
      txHash:
        type: 'string'
        example: '0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d'  # noqa: documentation
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'

  PollResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'currentBlock'
      - 'txHash'
      - 'txStatus'
      - 'txBlock'
      - 'txData'
      - 'txReceipt'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      currentBlock:
        type: 'integer'
        example: 28243911
      txHash:
        type: 'string'
        example: '0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d'  # noqa: documentation
      txStatus:
        type: 'number'
        example: 1
      txBlock:
        type: 'number'
        example: 28243800
      txData:
        type: 'object'
      txReceipt:
        type: 'object'

  UniswapConfigResponse:
    type: 'object'
    required:
      - 'network'
      - 'uniswap_router'
      - 'connection'
      - 'timestamp'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      uniswap_router:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      connection:
        type: 'boolean'
        example: true
      timestamp:
        type: 'integer'
        example: 1636368085740

  PriceRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'amount'
      - 'side'
      - 'chain'
      - 'network'
    properties:
      quote:
        type: 'string'
        example: 'WETH'
      base:
        type: 'string'
        example: 'DAI'
      amount:
        type: 'string'
        example: '10'
      side:
        type: 'string'
        example: 'BUY'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'

  PriceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'amount'
      - 'expectedAmount'
      - 'price'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa'
      quote:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      amount:
        type: 'string'
        example: '10'
      expectedAmount:
        type: 'string'
        example: '0.000000000000000001'
      price:
        type: 'string'
      gasPrice:
        type: 'number'
        example: 96
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'number'
        example: 150688
      gasCost:
        type: 'string'
        example: '0.014466048000000000'

  TradeRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'amount'
      - 'side'
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      quote:
        type: 'string'
        example: 'WETH'
      base:
        type: 'string'
        example: 'DAI'
      amount:
        type: 'string'
        example: '10'
      side:
        type: 'string'
        example: 'BUY'
      limitPrice:
        type: 'string'
      nonce:
        type: number
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
      connector:
        type: 'string'
        example: 'uniswap'

  TradeResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'amount'
      - 'price'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: '0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa'
      quote:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      amount:
        type: 'string'
        example: '10'
      expectedIn:
        type: 'string'
      expectedOut:
        type: 'string'
      price:
        type: 'string'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'

  CancelRequest:
    type: 'object'
    required:
      - 'nonce'
      - 'address'
      - 'chain'
      - 'network'
    properties:
      nonce:
        type: 'integer'
        example: 123
      address:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
  
  CancelResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      txHash:
        type: 'string'
        example: '0xa321bbe8888c3bc88ecb1ad4f03f22a71e6f5715dfcb19e0a2dca9036c981b6d'  # noqa: documentation

  GetWalletRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'testnet'
        
  GetWalletResponse:
    type: 'object'
    required:
      - 'chain'
      - 'walletAddresses'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      walletAddresses:
        type: 'array'
        items:
          type: string

        example: ['0xd0A1E359811322d97991E03f863a0C30C2cF029C', '0xd0A1E359811322d97991E03f863a0C30C2XXXXXX']

  AddWalletRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'privateKey'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'testnet'
      privateKey:
        type: 'string'
        example: '6078d949c953351685fd2026646028f2a862e6148d25d504967ba63898d720c0'
  
  AddWalletResponse:
    type: 'object'
    required:
      - 'address'
    properties:
      address:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2XXXXXX'
  
  RemoveWalletRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'address'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'testnet'
      address:
        type: 'string'
        example: '0xd0A1E359811322d97991E03f863a0C30C2cF029C'

  ConfigUpdateRequest:
    type: 'object'
    required:
      - 'configPath'
      - 'configValue'
    properties:
      configPath:
        type: 'string'
      configValue:
        OneOf:
          - type: 'boolean'
          - type: 'number'

  CosmosConfigResponse:
    type: 'object'
    required:
      - 'network'
      - 'rpcUrl'
      - 'connection'
      - 'timestamp'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      rpcUrl:
        type: 'string'
        example: 'https://rpc.cosmos.network/'
      connection:
        type: 'boolean'
        example: true
      timestamp:
        type: 'integer'
        example: 1641889489132

  CosmosBalanceRequest:
    type: 'object'
    required:
      - 'address'
      - 'tokenSymbols'
    properties:
      address:
        type: 'string'
        example: 'cosmos1pc8m5m7n0z8xe7sx2tawkvc0v6qkjql83js0dr'
      tokenSymbols:
        type: 'array'
        items: 'string'
        example: ['ATOM', 'NETA']

  CosmosPollRequest:
    type: 'object'
    required:
      - 'txHash'
    properties:
      txHash:
        type: 'string'
        example: 'E0E02A6C27A75F4442B0746676BDAF5F66AFF1E71928C54624A35B48D5A4B3AF'

  CosmosPollResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'txHash'
      - 'currentBlock'
      - 'txBlock'
      - 'gasUsed'
      - 'gasWanted'
      - 'txData'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      currentBlock:
        type: 'integer'
        example: 112646487
      txHash:
        type: 'string'
        example: 'oaMWkrYr1g9JBcDUPRqz21cJBxowM4CEbDy2FsCgNK569CjZSr4wa51d4k9DpTRJU8GUHfp3e9YX2pGXaBS5Tta'
      txBlock:
        type: 'number'
        example: 11581899
      gasUsed:
        type: 'number'
        example: 89054
      gasWanted:
        type: 'number'
        example: 130000
      txData:
        $ref: '#/definitions/CosmosTransaction'

  TokensResponse:
    type: 'object'
    required:
      - 'tokens'
    properties:
      tokens:
        type: 'object'
        example: '
        {
          tokens: [
            {
              "address": "0x006BeA43Baa3f7A6f765F14f10A1a1b08334EF45",
              "chainId": "1",
              "name": "Stox",
              "symbol": "STX",
              "decimals": "18",
              "logoURI": "https://tokens.1inch.io/0x006bea43baa3f7a6f765f14f10a1a1b08334ef45.png"
            },
            {
              "address": "0x0327112423F3A68efdF1fcF402F6c5CB9f7C33fd",
              "chainId": "1",
              "name": "PieDAOBTC",
              "symbol": "BTC",
              "decimals": "18",
              "logoURI": "https://tokens.1inch.io/0x0327112423f3a68efdf1fcf402f6c5cb9f7c33fd.png"
            }
          ]
        }'

  NetworkSelectionRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
      connector:
        type: 'string'
        example: 'uniswap'

  EstimateGasResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      gasPrice:
        type: 'number'
        example: 96
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'number'
        example: 150688
      gasCost:
        type: 'string'
        example: '0.014466048000000000'

  LiquidityAddRequest:
    type: 'object'
    required:
      - 'address'
      - 'token0'
      - 'token1'
      - 'amount0'
      - 'amount1'
      - 'fee'
      - 'lowerPrice'
      - 'upperPrice'
    properties:
      address:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      amount0:
        type: 'string'
        example: '10'
      amount1:
        type: 'string'
        example: '10'
      lowerPrice:
        type: 'number'
        example: 1
      upperPrice:
        type: number
        example: 5
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityAddResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'token0'
      - 'token1'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'kovan'
      timestamp:
        type: 'integer'
        example: 1636368085740
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
        example: '0x0000000000000000000000000000000000000000'

  LiquidityRemoveRequest:
    type: 'object'
    required:
      - 'address'
      - 'tokenId'
    properties:
      address:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      tokenId:
        type: 'number'
        example: 12
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityRemoveResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'tokenId'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'kovan'
      timestamp:
        type: 'integer'
        example: 1636368085740
      tokenId:
        type: 'number'
        example: 12
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
        example: '0x0000000000000000000000000000000000000000'

  LiquidityCollectRequest:
    type: 'object'
    required:
      - 'address'
      - 'tokenId'
    properties:
      address:
        type: 'string'
        example: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'
      tokenId:
        type: 'number'
        example: 12
      maxFeePerGas:
        type: number
      maxPriorityFeePerGas:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityCollectResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'tokenId'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'kovan'
      timestamp:
        type: 'integer'
        example: 1636368085740
      tokenId:
        type: 'number'
        example: 12
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
        example: '0x0000000000000000000000000000000000000000'

  LiquidityPositionRequest:
    type: 'object'
    required:
      - 'tokenId'
    properties:
      tokenId:
        type: 'number'
        example: 12
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityPositionResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'tokenId'
      - 'token0'
      - 'token1'
      - 'fee'
      - 'lowerPrice'
      - 'upperPrice'
      - 'amount0'
      - 'amount1'
      - 'unclaimedToken0'
      - 'unclaimedToken1'
    properties:
      network:
        type: 'string'
        example: 'kovan'
      timestamp:
        type: 'integer'
        example: 1636368085740
      tokenId:
        type: 'number'
        example: 12
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      fee:
        type: 'string'
        example: 'LOW'
      lowerPrice:
        type: 'string'
        example: '1'
      upperPrice:
        type: 'string'
        example: '5'
      amount0:
        type: 'string'
        example: '1'
      amount1:
        type: 'string'
        example: '1'
      unclaimedToken0:
        type: 'string'
        example: '2'
      unclaimedToken1:
        type: 'string'
        example: '2'

  LiquidityPriceRequest:
    type: 'object'
    required:
      - 'token0'
      - 'token1'
      - 'fee'
      - 'period'
      - 'interval'
    properties:
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      fee:
        type: 'string'
        example: 'LOW'
      period:
        type: 'number'
        example: 60
      interval:
        type: 'number'
        example: 5
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'kovan'
      connector:
        type: 'string'
        example: 'uniswapLP'

  LiquidityPriceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'token0'
      - 'token1'
      - 'fee'
      - 'period'
      - 'interval'
    properties:
      network:
        type: 'string'
        example: 'kovan'
      timestamp:
        type: 'integer'
        example: 1636368085740
      token0:
        type: 'string'
        example: 'DAI'
      token1:
        type: 'string'
        example: 'WETH'
      fee:
        type: 'string'
        example: 'LOW'
      period:
        type: 'number'
        example: 60
      interval:
        type: 'number'
        example: 5
      prices:
        type: 'object'
        example: ['1', '2', '3']


  PerpPairsRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'

  PerpPairsResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'pairs'
    properties:
      network:
        type: 'string'
        example: 'optimism'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      pairs:
        type: 'array'
        items: 'string'
        example: ['AAVEUSD', 'PERPUSD', 'BTCUSD']

  PerpPriceRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'base'
      - 'quote'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'

  PerpPriceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'markPrice'
      - 'indexPrice'
      - 'indexTwapPrice'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      markPrice:
        type: 'string'
        example: '0.1'
      indexPrice:
        type: 'string'
        example: '0.2'
      indexTwapPrice:
        type: 'string'
        example: '0.3'

  PerpStatusResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'isActive'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      isActive:
        type: 'boolean'
        example: 'true'

  PerpPositionRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'base'
      - 'quote'
      - 'address'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      address:
        type: 'string'
        example: '0x...'

  PerpPositionResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'positionAmt'
      - 'positionSide'
      - 'unrealizedProfit'
      - 'leverage'
      - 'entryPrice'
      - 'tickerSymbol'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      positionAmt:
        type: 'string'
        example: '0.1'
      positionSide:
        type: 'string'
        example: 'LONG'
      unrealizedProfit:
        type: 'string'
        example: '0.3'
      leverage:
        type: 'string'
        example: '1'
      entryPrice:
        type: 'string'
        example: '100.3'
      tickerSymbol:
        type: 'string'
        example: 'AAVEUSD'

  PerpBalanceRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
    properties:
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      address:
        type: 'string'
        example: '0x...'

  PerpBalanceResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'balance'

    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 1
      balance:
        type: 'string'
        example: '100'

  PerpOpenRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'amount'
      - 'side'
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
    properties:
      quote:
        type: 'string'
        example: 'AAVE'
      base:
        type: 'string'
        example: 'USD'
      amount:
        type: 'string'
        example: '10'
      side:
        type: 'string'
        example: 'LONG'
      nonce:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      address:
        type: 'string'
        example: '0x...'

  PerpOpenResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'quote'
      - 'amount'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: 'AAVE'
      quote:
        type: 'string'
        example: 'USD'
      amount:
        type: 'string'
        example: '10'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'
  
  PerpCloseRequest:
    type: 'object'
    required:
      - 'quote'
      - 'base'
      - 'chain'
      - 'network'
      - 'connector'
      - 'address'
    properties:
      quote:
        type: 'string'
        example: 'AAVE'
      base:
        type: 'string'
        example: 'USD'
      nonce:
        type: number
      chain:
        type: 'string'
        example: 'ethereum'
      network:
        type: 'string'
        example: 'optimism'
      connector:
        type: 'string'
        example: 'perp'
      address:
        type: 'string'
        example: '0x...'

  PerpCloseResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'base'
      - 'gasPrice'
      - 'gasPriceToken'
      - 'gasLimit'
      - 'gasCost'
      - 'nonce'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      base:
        type: 'string'
        example: 'AAVE'
      gasPrice:
        type: 'string'
      gasPriceToken:
        type: 'string'
        example: 'ETH'
      gasLimit:
        type: 'string'
      gasCost:
        type: 'string'
      nonce:
        type: 'string'
      txHash:
        type: 'string'

  NearBalancesRequest:
    type: 'object'
    required:
      - 'address'
      - 'tokenSymbols'
      - 'chain'
      - 'network'
    properties:
      privateKey:
        type: 'string'
        example: 'hummingbot.near'
      tokenSymbols:
        type: 'array'
        items: 'string'
        example: ["NEAR", "ETH", "AURORA"]
      chain:
        type: 'string'
        example: 'near'
      network:
        type: 'string'
        example: 'testnet'

  NearBalancesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'balances'
    properties:
      network:
        type: 'string'
        example: 'testnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      latency:
        type: 'number'
        example: 0.5
      balances:
        type: 'object'
        properties:
          id:
            type: 'string'
          name:
            type: 'string'
        example: '{"NEAR": "1.5", "ETH": "100", "AURORA": "300"}'

  NearPollRequest:
    type: 'object'
    required:
      - 'address'
      - 'txHash'
      - 'chain'
      - 'network'
    properties:
      address:
        type: 'string'
        example: 'hummingbot.near'
      txHash:
        type: 'string'
        example: 'HnpRwb8PjrtLjExxz4YxdiyJ2AwuRFhZHKa9WUASwyxk'
      chain:
        type: 'string'
        example: 'near'
      network:
        type: 'string'
        example: 'testnet'

  NearPollResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'currentBlock'
      - 'txHash'
      - 'txStatus'
      - 'txReceipt'
    properties:
      network:
        type: 'string'
        example: 'testnet'
      timestamp:
        type: 'integer'
        example: 1636368085740
      currentBlock:
        type: 'integer'
        example: 28243911
      txHash:
        type: 'string'
        example: 'HnpRwb8PjrtLjExxz4YxdiyJ2AwuRFhZHKa9WUASwyxk'
      txStatus:
        type: 'number'
        example: 1
      txReceipt:
        type: 'object'

  XRPLPollRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'txHash'
    properties:
      chain:
        type: 'string'
        example: 'xrpl'
      network:
        type: 'string'
        example: 'testnet'
      txHash:
        type: 'string'
        example: 'F2F7E4AF87F785270950EFA81171E0250E010E785A07B3514F6448617CB5522B'  # noqa: documentation
  
  XRPLPollResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'currentLedgerIndex'
      - 'txHash'
      - 'txStatus'
      - 'txLedgerIndex'
      - 'txData'
    properties:
      network:
        type: 'string'
        example: 'testnet'
      timestamp:
        type: 'number'
        example: 1676297304555
      currentLedgerIndex:
        type: 'number'
        example: 35355750
      txHash:
        type: 'string'
        example: 'F2F7E4AF87F785270950EFA81171E0250E010E785A07B3514F6448617CB5522B'
      txStatus:
        type: 'number'
        example: 1
      txLedgerIndex:
        type: 'number'
        example: 35332287
      txData:
        type: 'object'
        example: '
        {
            "id": 240,
            "result": {
                "Account": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
                "Fee": "12",
                "Flags": 524288,
                "LastLedgerSequence": 35433284,
                "Memos": [
                    {
                        "Memo": {
                            "MemoData": "39376634316337632D626464612D343933612D393564612D626539316163623161336637"
                        }
                    }
                ],
                "Sequence": 33485802,
                "SigningPubKey": "EDCF1C3DA89B8D54A907FE28DFE8F59B5F8097A05C3D26F2528B321C6BC25F5E7D",
                "TakerGets": {
                    "currency": "USD",
                    "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                    "value": "5"
                },
                "TakerPays": {
                    "currency": "VND",
                    "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                    "value": "135000"
                },
                "TransactionType": "OfferCreate",
                "TxnSignature": "09569E380CEFFAE4C73C337FFD818ABF76F9802E7F799BA23C30F563E137634C4678F550D20B55A864FE123D554694BD28812CAA3FB25BDFCB2578C62778B507",
                "date": 729538252,
                "hash": "F2F7E4AF87F785270950EFA81171E0250E010E785A07B3514F6448617CB5522B",
                "inLedger": 35332287,
                "ledger_index": 35332287,
                "meta": {
                    "AffectedNodes": [
                        {
                            "ModifiedNode": {
                                "FinalFields": {
                                    "Account": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
                                    "Balance": "919968236",
                                    "Flags": 0,
                                    "OwnerCount": 5,
                                    "Sequence": 33485803
                                },
                                "LedgerEntryType": "AccountRoot",
                                "LedgerIndex": "0A5AF1D714F8FDB56C512DD8DD516C1DD50F21416810AF5DA61E510317FDDCBE",
                                "PreviousFields": {
                                    "Balance": "919968248",
                                    "OwnerCount": 4,
                                    "Sequence": 33485802
                                },
                                "PreviousTxnID": "BD96AE0E125FD68A5973BC5DB67067AB48933B5F0763D29DFC57BFE87BF84F93",
                                "PreviousTxnLgrSeq": 35332283
                            }
                        },
                        {
                            "ModifiedNode": {
                                "FinalFields": {
                                    "Flags": 0,
                                    "Owner": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
                                    "RootIndex": "71984CCE4E1DEF4CA401C071A80B0DF028C2C872EBBD87C7846FCB317A315E8D"
                                },
                                "LedgerEntryType": "DirectoryNode",
                                "LedgerIndex": "71984CCE4E1DEF4CA401C071A80B0DF028C2C872EBBD87C7846FCB317A315E8D"
                            }
                        },
                        {
                            "CreatedNode": {
                                "LedgerEntryType": "DirectoryNode",
                                "LedgerIndex": "F01A0E08B24F1886221DB06C6C87382DDFD6D3D0FC5BBFAA590997A2BCE4C000",
                                "NewFields": {
                                    "ExchangeRate": "590997a2bce4c000",
                                    "RootIndex": "F01A0E08B24F1886221DB06C6C87382DDFD6D3D0FC5BBFAA590997A2BCE4C000",
                                    "TakerGetsCurrency": "0000000000000000000000005553440000000000",
                                    "TakerGetsIssuer": "297AFC4445B3B935CB5DE2050CACACE6E8F70300",
                                    "TakerPaysCurrency": "000000000000000000000000564E440000000000",
                                    "TakerPaysIssuer": "297AFC4445B3B935CB5DE2050CACACE6E8F70300"
                                }
                            }
                        },
                        {
                            "CreatedNode": {
                                "LedgerEntryType": "Offer",
                                "LedgerIndex": "F5D2E74E84E29A97359BF1C0EA7D734ABDFA078FC45BA70C63784D198BC5544D",
                                "NewFields": {
                                    "Account": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
                                    "BookDirectory": "F01A0E08B24F1886221DB06C6C87382DDFD6D3D0FC5BBFAA590997A2BCE4C000",
                                    "Flags": 131072,
                                    "Sequence": 33485802,
                                    "TakerGets": {
                                        "currency": "USD",
                                        "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                                        "value": "5"
                                    },
                                    "TakerPays": {
                                        "currency": "VND",
                                        "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                                        "value": "135000"
                                    }
                                }
                            }
                        }
                    ],
                    "TransactionIndex": 0,
                    "TransactionResult": "tesSUCCESS"
                },
                "validated": true
            },
            "type": "response"
        }'

  XRPLBalancesRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'address'
      - 'tokenSymbols'
    properties:
      chain:
        type: 'string'
        example: 'xrpl'
      network:
        type: 'string'
        example: 'testnet'
      address:
        type: 'string'
        example: 'r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV'  # noqa: documentation
      tokenSymbols:
        type: 'array'
        items:
          type: string
        example: ['XRP', 'USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx']
        
  XRPLBalancesResponse:
    type: 'object'
    required:
      - 'network'
      - 'timestamp'
      - 'latency'
      - 'balances'
    properties:
      network:
        type: 'string'
        example: 'testnet'
      timestamp:
        type: 'integer'
        example: 1676296168012
      latency:
        type: 'number'
        example: 0.799
      balances:
        type: 'object'
        properties:
          id:
            type: 'string'
          name:
            type: 'string'
        example: '{"XRP": "919.968236", "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx": "1035.121230268258"}'


  XRPLConfigRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
    properties:
      chain:
        type: 'string'
        example: 'xrpl'
      network:
        type: 'string'
        example: 'mainnet'

  XRPLConfigResponse:
    type: 'object'
    required:
      - 'network'
      - 'rpcUrl'
      - 'connection'
      - 'timestamp'
    properties:
      network:
        type: 'string'
        example: 'mainnet'
      rpcUrl:
        type: 'string'
        example: 'wss://xrplcluster.com/'
      connection:
        type: 'boolean'
        example: true
      timestamp:
        type: 'integer'
        example: 1641889489132

  XRPLDEXGetOpenOrdersRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: string
        example: xrpl
      network:
        type: string
        example: testnet
      connector:
        type: string
        example: 'xrplDEX'
      orders:
        type: 'array'
        items:
          type: object
        example: '
        [
          {
            "marketName": "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
            "walletAddress": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV"
          }
        ]
        '  

  XRPLDEXGetOpenOrdersResponse:
    type: 'object'
    properties:
      "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx":
        type: object
        example: '
        {
          "33485801": {
              "sequence": 33485801,
              "marketName": "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
              "price": "23000.000000000007",
              "amount": "115000",
              "side": "BUY"
          },
          "33485802": {
              "sequence": 33485802,
              "marketName": "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
              "price": "27000",
              "amount": "5",
              "side": "SELL"
          }
        }
        '

  XRPLDEXDeleteCancelOrdersRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'waitUntilIncludedInBlock'
    properties:
      chain:
        type: string
        example: xrpl
      network:
        type: string
        example: testnet
      connector:
        type: string
        example: 'xrplDEX'
      waitUntilIncludedInBlock:
        type: boolean
        example: true
      orders:
        type: 'array'
        items:
          type: object
        example: '
        [
          {
              "walletAddress": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
              "offerSequence": 33485803
          }
        ]
        '

  XRPLDEXDeleteCancelOrdersResponse:
    type: 'object'
    properties:
      "33485803":
        type: object
        example: '
        {
          "walletAddress": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
          "status": "CANCELED",
          "signature": "6BC113E5B58B4F7B689057FE6E17C1ADEB39A69C1E564B001DB7B5B8285608BC",
          "transactionResult": "tesSUCCESS"
        }
        '

  XRPLDEXPostCreateOrdersRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
      - 'waitUntilIncludedInBlock'
    properties:
      chain:
        type: string
        example: xrpl
      network:
        type: string
        example: testnet
      connector:
        type: string
        example: 'xrplDEX'
      waitUntilIncludedInBlock:
        type: boolean
        example: true
      orders:
        type: 'array'
        items:
          type: object
        example: '
        [
          {
              "marketName": "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
              "walletAddress": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
              "side": "BUY",
              "price": 594.0,
              "amount": 33.67,
              "type": "LIMIT"
          }
        ]
        '
  
  XRPLDEXPostCreateOrdersResponse:
    type: 'object'
    properties:
      "33485803":
        type: object
        example: '
        {
          "walletAddress": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
          "marketName": "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
          "price": 594,
          "amount": 33.67,
          "side": "BUY",
          "type": "LIMIT",
          "fee": 0,
          "orderLedgerIndex": "35357471",
          "status": "OPEN",
          "sequence": 33485803,
          "signature": "53CCABA69887B92D91AE27B083D11262B4393D95D9A0AEFF4B07A731FA1F74E8",
          "transactionResult": "tesSUCCESS"
        }
        '

  XRPLDEXGetOrdersRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: string
        example: xrpl
      network:
        type: string
        example: testnet
      connector:
        type: string
        example: 'xrplDEX'
      orders:
        type: 'array'
        items:
          type: object
        example: '
        [
          {
              "sequence": "33485803",
              "signature": "53CCABA69887B92D91AE27B083D11262B4393D95D9A0AEFF4B07A731FA1F74E8"
          }
        ]
        '

  XRPLDEXGetOrdersResponse:
    type: 'object'
    properties:
      "33485803":
        type: object
        example: '
        {
          "sequence": "33485803",
          "status": "OPEN",
          "signature": "53CCABA69887B92D91AE27B083D11262B4393D95D9A0AEFF4B07A731FA1F74E8",
          "transactionResult": "tesSUCCESS"
        }
        '

  XRPLDEXGetOrderBooksRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: string
        example: xrpl
      network:
        type: string
        example: testnet
      connector:
        type: string
        example: 'xrplDEX'
      marketName:
        type: string
        example: 'USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx'
        
  XRPLDEXGetOrderBooksResponse:
    type: 'object'
    required:
      - 'market'
      - 'asks'
      - 'bids'
      - 'topAsk'
      - 'topBid'
      - 'midPrice'
      - 'timestamp'
    properties:
      market:
        type: 'object'
        example: '
        {
          "name": "USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
          "minimumOrderSize": 15,
          "tickSize": 15,
          "baseTransferRate": 0,
          "quoteTransferRate": 0
        }
        '
      asks:
        type: 'object'
        example: '
        [
          {
              "Account": "r9wmQfStbNfPJ2XqAN7KH4iP8NJKmqPe16",
              "BookDirectory": "F01A0E08B24F1886221DB06C6C87382DDFD6D3D0FC5BBFAA590840C195D02FFF",
              "BookNode": "0",
              "Flags": 0,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "D1D20075111DD00845D19A8F749EFAA00816E8BF57A43305C4E8877FD411A5C9",
              "PreviousTxnLgrSeq": 35332426,
              "Sequence": 33595725,
              "TakerGets": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "2.15238915195867"
              },
              "TakerPays": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "49999.9999999999"
              },
              "index": "2C7E8D52885EAA4A16F3D3C7C1B2EB542A6DA1218302754ABE390B4639D2766F",
              "owner_funds": "1664.878769731742",
              "quality": "23229.99999999999"
          },
          {
              "Account": "r9wmQfStbNfPJ2XqAN7KH4iP8NJKmqPe16",
              "BookDirectory": "F01A0E08B24F1886221DB06C6C87382DDFD6D3D0FC5BBFAA5908946E0121F001",
              "BookNode": "0",
              "Flags": 0,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "735C3FD717EBBF2077FD4102AF928A5B45C6C2AED84388E0515869556168312E",
              "PreviousTxnLgrSeq": 35332426,
              "Sequence": 33595726,
              "TakerGets": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "2.0703933747412"
              },
              "TakerPays": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "50000"
              },
              "index": "9E63A2AA02403532D9F8543F172B0228CF620D50D4F87F9A68A2F84718010644",
              "quality": "24150.00000000001"
          },
          {
              "Account": "r9wmQfStbNfPJ2XqAN7KH4iP8NJKmqPe16",
              "BookDirectory": "F01A0E08B24F1886221DB06C6C87382DDFD6D3D0FC5BBFAA5908FD0587482001",
              "BookNode": "0",
              "Flags": 0,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "2617441297B92D191883435B8D6E55F8AD0289FEDEB60FD52FD7B7E373106A6D",
              "PreviousTxnLgrSeq": 35332427,
              "Sequence": 33595727,
              "TakerGets": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "1.97628458498024"
              },
              "TakerPays": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "50000.0000000001"
              },
              "index": "14A1A56CE5A59A3C9DD3CC84A0CD3E72F78B983B1919435B70FC0B80C3A2257E",
              "quality": "25300.00000000001"
          },
          {
              "Account": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
              "BookDirectory": "F01A0E08B24F1886221DB06C6C87382DDFD6D3D0FC5BBFAA590997A2BCE4C000",
              "BookNode": "0",
              "Flags": 131072,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "F2F7E4AF87F785270950EFA81171E0250E010E785A07B3514F6448617CB5522B",
              "PreviousTxnLgrSeq": 35332287,
              "Sequence": 33485802,
              "TakerGets": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "5"
              },
              "TakerPays": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "135000"
              },
              "index": "F5D2E74E84E29A97359BF1C0EA7D734ABDFA078FC45BA70C63784D198BC5544D",
              "owner_funds": "1035.121230268258",
              "quality": "27000"
          }
        ]
        '
      bids:
        type: 'object'
        example: '
        [
          {
              "Account": "r3z4R6KQWfwRf9G15AhUZe2GN67Sj6PYNV",
              "BookDirectory": "70A605D482230F5A27C38C313FC7929CFF4A7BB6EFC86831500F725325754DE9",
              "BookNode": "0",
              "Flags": 0,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "BD96AE0E125FD68A5973BC5DB67067AB48933B5F0763D29DFC57BFE87BF84F93",
              "PreviousTxnLgrSeq": 35332283,
              "Sequence": 33485801,
              "TakerGets": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "115000"
              },
              "TakerPays": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "5"
              },
              "index": "BB068062EC0F47D4E5A8BD9CC71E59AE282FEA2D66B3CE2D9F12B3AAA45541CD",
              "owner_funds": "694985.0000000002",
              "quality": "0.00004347826086956521"
          },
          {
              "Account": "r9wmQfStbNfPJ2XqAN7KH4iP8NJKmqPe16",
              "BookDirectory": "70A605D482230F5A27C38C313FC7929CFF4A7BB6EFC86831500FAA0EB7466930",
              "BookNode": "0",
              "Flags": 0,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "3E2F17517B52F65F83890D9397A0FC62965D2D5B528F27461393CEDE0082E095",
              "PreviousTxnLgrSeq": 35332424,
              "Sequence": 33595722,
              "TakerGets": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "50000"
              },
              "TakerPays": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "2.20455241588444"
              },
              "index": "35B4F64B6E2B9ABCF19838BD54C914E08DF349409578DEC3D19B46C6700539B2",
              "owner_funds": "307514.9999999998",
              "quality": "0.0000440910483176888"
          },
          {
              "Account": "r9wmQfStbNfPJ2XqAN7KH4iP8NJKmqPe16",
              "BookDirectory": "70A605D482230F5A27C38C313FC7929CFF4A7BB6EFC86831501052E6EA1B90A1",
              "BookNode": "0",
              "Flags": 0,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "102E59040E3ADB42FFE65C8487A748173A62F21ABDDFB02DCB4DFDDA71E600C9",
              "PreviousTxnLgrSeq": 35332425,
              "Sequence": 33595723,
              "TakerGets": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "49999.9999999999"
              },
              "TakerPays": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "2.29737567550062"
              },
              "index": "6475DDF5DD22F927EFA5CD303EF097ACC6DA07071370CAE1A53DB6D15D7A5F14",
              "quality": "0.00004594751351001249"
          },
          {
              "Account": "r9wmQfStbNfPJ2XqAN7KH4iP8NJKmqPe16",
              "BookDirectory": "70A605D482230F5A27C38C313FC7929CFF4A7BB6EFC8683150113B103000A6D6",
              "BookNode": "0",
              "Flags": 0,
              "LedgerEntryType": "Offer",
              "OwnerNode": "0",
              "PreviousTxnID": "673B589B8BA761B3CDC29E81A06069543F147CF16B51FC149E98C1B9B58C67B2",
              "PreviousTxnLgrSeq": 35332425,
              "Sequence": 33595724,
              "TakerGets": {
                  "currency": "VND",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "50000.0000000001"
              },
              "TakerPays": {
                  "currency": "USD",
                  "issuer": "rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx",
                  "value": "2.42500765747288"
              },
              "index": "753E103F3A07F24BF7A69300197726D891253B04A1EFFC323A9653052BCA5244",
              "quality": "0.0000485001531494575"
          }
        ]
        '
      topAsk:
        type: 'number'
        example: 23229.99999999999
      topBid:
        type: 'number'
        example: 23000.000000000007
      midPrice:
        type: 'number'
        example: 35332287
      timestamp:
        type: 'number'
        example: 1676302213676

  XRPLDEXGetTickersRequest:
    type: 'object'
    required:
      - 'chain'
      - 'network'
      - 'connector'
    properties:
      chain:
        type: string
        example: xrpl
      network:
        type: string
        example: testnet
      connector:
        type: string
        example: 'xrplDEX'
      marketName:
        type: string
        example: 'USD.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx/VND.rh8LssQyeBdEXk7Zv86HxHrx8k2R2DBUrx'

  XRPLDEXGetTickersResponse:
    type: object
    properties:
      price:
        type: number
        example: 23115
      timestamp:
        type: number
        example: 1676301678697